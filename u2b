#!/usr/bin/perl
# Copyright: SZABO Gergely <szg@subogero.com>, GNU GPL v2
if ($ARGV[0] eq '-h') {
    print <<EOF;
Usage:
u2b -h
u2b -u url
u2b [ -f <format> ] [words]

Search YouTube for words, print title, stream URL and thumbnail link of hits.
When words are omitted, a list of featured videos is printed.
With -u option extract stream URL playable by the Raspberry Pi's omxplayer.

-h          Print this help text and exit
-u url      Print omxplayer-playable stream link for video URL
-f <format> Supported formats are ini (default) and html

In html format, each video has a stream link called its title, followed
by a thumbnail image.
EOF
    exit 0;
}

# Extract stream URL
if ($ARGV[0] eq '-u') {
    shift;
    my $url = shift;
    print `youtube-dl -g $url`;
    exit 0;
}

# Format
if ($ARGV[0] eq '-f') {
    shift;
    $format = shift;
}

# Query, URL-encoded
$query = 'https://gdata.youtube.com/feeds/api/videos?q=';
$query .= join '%20', @ARGV;
$xml = `curl $query 2>/dev/null`;

# Parse response XML
$i = 0;
while ($xml =~ m|^.*?<entry>(.+?)</media:group>(.*)|s) {
    $xml = $2;
    my $vid = $1;
    next unless $vid =~ m|<link .+?href='([^']+?)&amp;|;
    my $url = $1;
    $vid =~ m|<media:title type='plain'>(.+?)</media:title>|;
    my $title = $1;
    $vid =~ m|<media:thumbnail url='([^']+?)' height='90'[^>]+?/>|;
    my $thumbnail = $1;
    if ($format eq 'html') {
        print <<EOF;
<p>
<a href="$url">$title</a>
<br>
<img src="$thumbnail"/>
</p>
EOF
    } else {
        print "[$i]\ntitle=$title\nurl=$url\nthumbnail=$thumbnail\n";
    }
    $i++;
}
